export class JsonTransformer {
    toDB(input) {
        return input == undefined ? null : JSON.stringify(input);
    }
    fromDB(input) {
        return input == null ? undefined : JSON.parse(input);
    }
}
export class BooleanTextTransformer {
    toDB(input) {
        return input == undefined ? null : !input ? '0' : '1';
    }
    fromDB(input) {
        if (input == null) {
            return undefined;
        }
        if (input === '0' || input === 'false') {
            return false;
        }
        else if (input === '1' || input === 'true') {
            return true;
        }
        return undefined;
    }
}
export class BooleanNumberTransformer {
    toDB(input) {
        return input == undefined ? null : !input ? 0 : 1;
    }
    fromDB(input) {
        return input == null ? undefined : !input ? false : true;
    }
}
export class DateTextTransformer {
    toDB(input) {
        return input == undefined ? null : input.toISOString();
    }
    fromDB(input) {
        return input == null ? undefined : new Date(Date.parse(input));
    }
}
export class DateIntegerAsSecondsTransformer {
    toDB(input) {
        return input == undefined ? null : Math.floor(input.getTime() / 1000);
    }
    fromDB(input) {
        return input == null ? undefined : new Date(Number.isInteger(input) ? input * 1000 : NaN);
    }
}
export class DateIntegerAsMillisecondsTransformer {
    toDB(input) {
        return input == undefined ? null : input.getTime();
    }
    fromDB(input) {
        return input == null ? undefined : new Date(Number.isInteger(input) ? input : NaN);
    }
}
export class NumberTextTransformer {
    toDB(input) {
        return input == undefined ? null : String(input);
    }
    fromDB(input) {
        return input == null ? undefined : Number(input);
    }
}
export class NumberDefaultTransformer {
    toDB(input) {
        return input == undefined ? null : Number(input);
    }
    fromDB(input) {
        return input == null ? undefined : Number(input);
    }
}
export class StringDefaultTransformer {
    toDB(input) {
        return input == undefined ? null : String(input);
    }
    fromDB(input) {
        return input == null ? undefined : String(input);
    }
}
export class StringNumberTransformer {
    toDB(input) {
        return input == undefined ? null : Number(input);
    }
    fromDB(input) {
        return input == null ? undefined : String(input);
    }
}
export class UnknownDefaultTransformer {
    /* istanbul ignore next */
    toDB(input) {
        return input == undefined ? null : input;
    }
    /* istanbul ignore next */
    fromDB(input) {
        return input == null ? undefined : input;
    }
}
export class DefaultValueTransformers {
    json = new JsonTransformer();
    booleanText = new BooleanTextTransformer();
    booleanNumber = new BooleanNumberTransformer();
    dateText = new DateTextTransformer();
    dateIntegerAsSeconds = new DateIntegerAsSecondsTransformer();
    dateIntegerAsMilliseconds = new DateIntegerAsMillisecondsTransformer();
    numberText = new NumberTextTransformer();
    numberDefault = new NumberDefaultTransformer();
    stringNumber = new StringNumberTransformer();
    stringDefault = new StringDefaultTransformer();
    unknownDefault = new UnknownDefaultTransformer();
}
export const DEFAULT_VALUE_TRANSFORMERS = new DefaultValueTransformers();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFZhbHVlVHJhbnNmb3JtZXJzLm1qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL1BhY2thZ2VzL1RzUHJvai9zcmMvQ29tbW9uL1NxbGl0ZTNPUk0vbWV0YWRhdGEvRGVmYXVsdFZhbHVlVHJhbnNmb3JtZXJzLm10cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQU8sZUFBZTtJQUMxQixJQUFJLENBQUMsS0FBVTtRQUNiLE9BQU8sS0FBSyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxNQUFNLENBQUMsS0FBb0I7UUFDekIsT0FBTyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHNCQUFzQjtJQUNqQyxJQUFJLENBQUMsS0FBMEI7UUFDN0IsT0FBTyxLQUFLLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztJQUN4RCxDQUFDO0lBRUQsTUFBTSxDQUFDLEtBQW9CO1FBQ3pCLElBQUksS0FBSyxJQUFJLElBQUksRUFBRSxDQUFDO1lBQ2xCLE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7UUFDRCxJQUFJLEtBQUssS0FBSyxHQUFHLElBQUksS0FBSyxLQUFLLE9BQU8sRUFBRSxDQUFDO1lBQ3ZDLE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQzthQUFNLElBQUksS0FBSyxLQUFLLEdBQUcsSUFBSSxLQUFLLEtBQUssTUFBTSxFQUFFLENBQUM7WUFDN0MsT0FBTyxJQUFJLENBQUM7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