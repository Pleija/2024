import { StateNode } from "Common/StateNode.mjs";
var Addressables = CS.UnityEngine.AddressableAssets.Addressables;
var $promise = puer.$promise;
var Res = CS.Res;
export class StartUpdating extends StateNode {
    slider;
    startButton;
    text;
    checkCatalog;
    updateCatalog;
    getSize;
    getDownload;
    needSize;
    testStart() {
    }
    async enter() {
        console.log("Updating...", getAllMethod(this).join(', '));
        this.slider.value = 0;
        this.text.text = "";
        this.checkCatalog = Addressables.CheckForCatalogUpdates(false);
        await $promise(this.checkCatalog.Task);
        if (this.checkCatalog.Result?.Count > 0) {
            this.updateCatalog = Addressables.UpdateCatalogs(this.checkCatalog.Result, false);
            await $promise(this.updateCatalog.Task);
            console.log("update catalog", this.updateCatalog.Result.Count);
            if (this.updateCatalog.IsValid()) {
                Addressables.Release(this.updateCatalog);
            }
        }
        else {
            console.log("catalog don't need update");
        }
        if (this.checkCatalog.IsValid()) {
            //Addressables.Release(this.checkCatalog as any);
        }
        //const keys = CS.App.Helpers.Res.Keys;
        this.getSize = Res.GetDownloadSizeAll();
        await $promise(this.getSize.Task);
        if (this.getSize.Result > 0) {
            this.getDownload = Res.DownloadAll();
            this.needSize = this.getDownload.GetDownloadStatus().TotalBytes - this.getDownload.GetDownloadStatus().DownloadedBytes;
            console.log("need size", Number(this.needSize) / 1024 / 1024);
            await $promise(this.getDownload.Task);
            console.log("download ready");
            if (this.getDownload.IsValid()) {
                //Addressables.Release(this.getDownload);
            }
        }
        else {
            console.log("addressable is updated");
        }
        this.slider.gameObject.SetActive(false);
        this.startButton.gameObject.SetActive(true);
    }
    update() {
        let sizeText = "";
        if (this.getDownload?.IsValid() && !this.getDownload.IsDone) {
            const current = this.getDownload.GetDownloadStatus().TotalBytes - this.getDownload.GetDownloadStatus().DownloadedBytes;
            console.log("current", current);
            this.slider.value = 1 - Number(current / this.needSize);
            sizeText = " [ " + (Number(current) / 1024 / 1024).toFixed(1).toString() + "M ]";
        }
        this.text.text = this.slider.value > 0 && this.slider.value < 1 ? Math.floor(this.slider.value * 100).toString() + "%" : "";
        this.text.text += sizeText;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RhcnRVcGRhdGluZy5tanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9QYWNrYWdlcy9Uc1Byb2ovc3JjL1N0YXJ0L1VwZGF0aW5nL1N0YXJ0VXBkYXRpbmcubXRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUlqRCxJQUFPLFlBQVksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLFlBQVksQ0FBQztBQUdwRSxJQUFPLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBS2hDLElBQU8sR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUM7QUFFcEIsTUFBTSxPQUFPLGFBQWMsU0FBUSxTQUFtQjtJQUNsRCxNQUFNLENBQVM7SUFDZixXQUFXLENBQVM7SUFDcEIsSUFBSSxDQUFPO0lBQ0gsWUFBWSxDQUF5QztJQUNyRCxhQUFhLENBQW1EO0lBQ2hFLE9BQU8sQ0FBaUM7SUFDeEMsV0FBVyxDQUF1QjtJQUNsQyxRQUFRLENBQVM7SUFFekIsU0FBUztJQUNULENBQUM7SUFFRCxLQUFLLENBQUMsS0FBSztRQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUUxRCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLHNCQUFzQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9ELE1BQU0sUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLEdB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