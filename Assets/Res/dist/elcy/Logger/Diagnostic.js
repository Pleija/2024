import { Timer } from "./Timer";
export class Diagnostic {
    static get enabled() {
        return !!Diagnostic.logger;
    }
    static debug(source, message, error, ...args) {
        if (!Diagnostic.enabled) {
            return;
        }
        if (error && !(error instanceof Error)) {
            args.unshift(error);
            error = null;
        }
        Diagnostic.logger.log(source, "debug", message, error, args);
    }
    static error(source, message, error, ...args) {
        if (!Diagnostic.enabled) {
            return;
        }
        if (error && !(error instanceof Error)) {
            args.unshift(error);
            error = null;
        }
        Diagnostic.logger.log(source, "error", message, error, args);
    }
    static info(source, message, error, ...args) {
        if (!Diagnostic.enabled) {
            return;
        }
        if (error && !(error instanceof Error)) {
            args.unshift(error);
            error = null;
        }
        Diagnostic.logger.log(source, "info", message, error, args);
    }
    static timer(autoStart = true) {
        if (!Diagnostic.enabled) {
            return null;
        }
        const res = new Timer();
        if (autoStart) {
            res.start();
        }
        return res;
    }
    static trace(source, message, error, ...args) {
        if (!Diagnostic.enabled) {
            return;
        }
        if (error && !(error instanceof Error)) {
            args.unshift(error);
            error = null;
        }
        Diagnostic.logger.log(source, "trace", message, error, args);
    }
    static warn(source, message, error, ...args) {
        if (!Diagnostic.enabled) {
            return;
        }
        if (error && !(error instanceof Error)) {
            args.unshift(error);
            error = null;
        }
        Diagnostic.logger.log(source, "warn", message, error, args);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhZ25vc3RpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL1BhY2thZ2VzL1RzUHJvai9zcmMvZWxjeS9Mb2dnZXIvRGlhZ25vc3RpYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE1BQU0sT0FBZ0IsVUFBVTtJQUNyQixNQUFNLEtBQUssT0FBTztRQUNyQixPQUFPLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO0lBQy9CLENBQUM7SUFJTSxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQVcsRUFBRSxPQUFlLEVBQUUsS0FBYSxFQUFFLEdBQUcsSUFBVztRQUMzRSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3RCLE9BQU87UUFDWCxDQUFDO1FBRUQsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEtBQUssWUFBWSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEIsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixDQUFDO1FBQ0QsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFJTSxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQVcsRUFBRSxPQUFlLEVBQUUsS0FBYSxFQUFFLEdBQUcsSUFBVztRQUMzRSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3RCLE9BQU87UUFDWCxDQUFDO1FBRUQsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEtBQUssWUFBWSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEIsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixDQUFDO1FBQ0QsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFHTSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQVcsRUFBRSxPQUFlLEVBQUUsS0FBYSxFQUFFLEdBQUcsSUFBVztRQUMxRSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3RCLE9BQU87UUFDWCxDQUFDO1FBRUQsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEtBQUssWUFBWSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEIsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixDQUFDO1FBQ0QsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFDTSxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdEIsT0FBTyxJQUFJLENBQUM7UUFDaEIsQ0FBQztRQUVELE1BQU0sR0FBRyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7UUFDeEIsSUFBSSxTQUFTLEVBQUUsQ0FBQztZQUNaLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNoQixDQUFDO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBR00sTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFXLEVBQUUsT0FBZSxFQUFFLEtBQW1CLEVBQUUsR0FBRyxJQUFXO1FBQ2pGLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdEIsT0FBTztRQUNYLENBQUM7UUFFRCxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwQixLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLENBQUM7UUFDRCxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUdNLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBVyxFQUFFLE9BQWUsRUFBRSxLQUFhLEVBQUUsR0FBRyxJQUFXO1FBQzFFLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdEIsT0FBTztRQUNYLENBQUM7UUFFRCxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDckMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwQixLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLENBQUM7UUFDRCxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEUsQ0FBQztDQUNKIn0=