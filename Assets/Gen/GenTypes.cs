using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using Puerts;
using Sirenix.Utilities;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;

namespace Gen
{
    public class GenTypes
    {
        // todo: AOT需要
        public static IEnumerable<Type> Bindings => new List<Type>() {
            //todo: 每个泛型都要写一个, 否则导不出泛型的方法, https://github.com/Tencent/puerts/issues/963
            // typeof(DataModel<DataModelSample>),
            // typeof(Singleton<SingletonSample>),
            // typeof(Agent<AgentSample>),
            //
            typeof(Dictionary<string, JSObject>),
            typeof(Dictionary<string, int>),
            typeof(Dictionary<string, float>),
            typeof(Dictionary<string, object>),
            typeof(Dictionary<string, string>),
            typeof(Dictionary<string, long>),
            typeof(JSObject),
            typeof(Uri),
            typeof(System.Object),
            typeof(UnityEngine.Object),
            typeof(XXTEA),
            typeof(Addressables),
            typeof(Enumerable),
            typeof(LinqExtensions),
            typeof(AsyncOperationHandle<SceneInstance>),
            typeof(AsyncOperationHandle<UnityEngine.Object>),
            typeof(AsyncOperationHandle<GameObject>),
            typeof(AsyncOperationHandle<Texture2D>),
            typeof(AsyncOperationHandle<Texture>),
            typeof(AsyncOperationHandle<>),
            typeof(AsyncOperationHandle),
            typeof(Application),
            typeof(object),
            typeof(GameObject),
            typeof(Transform),
            typeof(Component),
            typeof(UnityEngine.Object),
            typeof(Vector3),
            typeof(Vector2),
            typeof(Vector3Int),
            typeof(Vector2Int),
            typeof(Hashtable),
            typeof(Array),
            typeof(IList),
            typeof(Queue<object>),
            typeof(Queue),
            typeof(IEnumerable<object>),
            typeof(IEnumerable),
            typeof(IEnumerator),
            typeof(IEnumerator<object>),
            typeof(IList<object>),
            typeof(IDictionary),
            typeof(IDictionary<object,object>),
            typeof(List<object>),
            typeof(List<string>),
            typeof(Dictionary<object,object>),
            typeof(Dictionary<string, string>),
            typeof(HashSet<object>),
            typeof(HashSet<GameObject>),
            typeof(Debug),
            typeof(PuertsTest.TestClass),
            typeof(Vector3),
            typeof(Type),
            typeof(List<int>),
            typeof(Dictionary<string, List<int>>),
            typeof(PuertsTest.BaseClass),
            typeof(PuertsTest.DerivedClass),
            typeof(PuertsTest.BaseClassExtension),
            typeof(PuertsTest.MyEnum),
            typeof(Time),
            typeof(Transform),
            typeof(Component),
            typeof(GameObject),
            typeof(UnityEngine.Object),
            typeof(Delegate),
            typeof(object),
            typeof(Type),
            typeof(ParticleSystem),
            typeof(Canvas),
            typeof(RenderMode),
            typeof(Behaviour),
            typeof(MonoBehaviour),
            typeof(ScriptableObject),
            typeof(System.IO.File),
            typeof(System.IO.Path),
            typeof(System.IO.Directory),
            typeof(UnityEngine.Networking.UnityWebRequest),
            typeof(UnityEngine.Networking.DownloadHandler),
            typeof(UnityEngine.EventSystems.UIBehaviour),
            typeof(UnityEngine.UI.Selectable),
            typeof(UnityEngine.UI.Button),
            typeof(UnityEngine.UI.Text),
            typeof(UnityEngine.UI.Button.ButtonClickedEvent),
            typeof(UnityEngine.Events.UnityEvent),
            typeof(UnityEngine.UI.InputField),
            typeof(UnityEngine.UI.Toggle),
            typeof(UnityEngine.UI.Toggle.ToggleEvent),
            typeof(UnityEngine.Events.UnityEvent<bool>),
            typeof(PuertsDeclareTest.Plants.pumkinPeaShooter),
            typeof(PuertsDeclareTest.Plants.Shootable),
            typeof(PuertsDeclareTest.Zombies.Walkable),
            typeof(PuertsDeclareTest.Zombies.Flyable),
            typeof(PuertsDeclareTest.Zombies.BalloonZombie),
        };
    }
}
