namespace Helpers.Encryption
{
    public partial class RSATool
    {
        #if UNITY_EDITOR
        byte[] privateKey => new byte[] {
            //@formatter:off
            0x30, 0x82, 0x2, 0x75, 0x2, 0x1, 0x0, 0x30, 0xD, 0x6, 0x9, 0x2A, 0x86, 0x48,
            0x86, 0xF7, 0xD, 0x1, 0x1, 0x1, 0x5, 0x0, 0x4, 0x82, 0x2, 0x5F, 0x30, 0x82,
            0x2, 0x5B, 0x2, 0x1, 0x0, 0x2, 0x81, 0x81, 0x0, 0x98, 0x78, 0xBE, 0x1F, 0x12,
            0x90, 0x25, 0xD5, 0x7, 0x8C, 0x53, 0xF6, 0x8B, 0x2A, 0x5A, 0x1A, 0xB8, 0xD,
            0xF6, 0x9B, 0xA2, 0x8E, 0x58, 0x85, 0x4C, 0x5E, 0x4A, 0x11, 0x2C, 0x4C, 0xEA,
            0xB3, 0xC, 0x3F, 0x4F, 0x2E, 0x50, 0xDA, 0x22, 0xD3, 0x74,
            0x3C, 0xA6, 0x80, 0x61, 0x7, 0x26, 0x97, 0x1A, 0x63, 0xAA, 0x96, 0x26, 0x5E,
            0x8C, 0x9C, 0xFF, 0xAA, 0x80, 0x6E, 0xE1, 0x83, 0xCA, 0x1A, 0xA9, 0x70, 0x2E,
            0x48, 0xEC, 0xD5, 0x3A, 0x7A, 0xBA, 0xCA, 0xD3, 0xCF, 0xD2, 0xD, 0xB5, 0x31,
            0xA9, 0x63, 0x38, 0x2C, 0x31, 0x37, 0xDC, 0xFA, 0x19, 0x76, 0xF3, 0xC7, 0x3B,
            0xB6, 0x9, 0xBD, 0x92, 0x84, 0xF6, 0xCC, 0x5E, 0x99, 0x4B, 0x21, 0xC8, 0x92,
            0x24, 0xAF, 0x5E, 0x9A, 0x28, 0xD2, 0xBC, 0x3A, 0xBF, 0x5B, 0xB4, 0xD9, 0x62,
            0xD4, 0x42, 0xE3, 0x39, 0x38, 0xC0, 0x7B, 0x40, 0x6B, 0x2, 0x1, 0x3, 0x2, 0x81,
            0x80, 0x19, 0x69, 0x75, 0x5, 0x2D, 0xC2, 0xB0, 0xF8, 0xD6, 0x97, 0x63, 0x53,
            0xC1, 0xDC, 0x64, 0x59, 0xC9, 0x57, 0xA9, 0x19, 0xF0, 0x6D, 0xE, 0xC0, 0xE2,
            0xF, 0xB7, 0x2, 0xDC, 0xB7, 0x7C, 0x73, 0x2C, 0xB5, 0x37, 0xDD, 0xD, 0x79,
            0xB0, 0x78, 0x93, 0x5F, 0x71, 0x15, 0x65, 0x81, 0x31, 0x19, 0x2F, 0x10, 0x9C,
            0x6E, 0x5B, 0xBA, 0x6C, 0xC4, 0xD5, 0x47, 0x15, 0x67, 0xD0, 0x40, 0xA1, 0xAE,
            0xDA, 0x40, 0x7C, 0xB5, 0x2D, 0xF2, 0x9C, 0xF7, 0x1E, 0x9F, 0x90, 0x5D, 0x9B,
            0x55, 0x26, 0x1A, 0xB, 0xDE, 0x53, 0x86, 0x27, 0x10, 0x38, 0xF0, 0x1D, 0xA, 0x62,
            0x51, 0xC8, 0xA, 0xBB, 0xB3, 0x71, 0xDE, 0xC5, 0xBE, 0x5D, 0x58, 0x7E, 0x6A, 0xF2,
            0x3C, 0x84, 0xBA, 0x9F, 0x97, 0x60, 0x8F, 0x49, 0xFF, 0x90, 0x48, 0xD8, 0x50, 0x4D,
            0x11, 0x45, 0xE7, 0x4E, 0x46, 0x6D, 0x1, 0x20, 0x53, 0x2, 0x41, 0x0, 0xD2, 0x7B,
            0xE0, 0x69, 0x82, 0x9D, 0xDE, 0x9A, 0x8B, 0x83, 0x92, 0x18, 0x51, 0xDF, 0xEC,
            0xD7, 0x2C, 0x6, 0x59, 0x82, 0x87, 0xE3, 0xEE, 0x7F, 0x2D, 0xF6, 0x99, 0x95,
            0x46, 0x78, 0xF, 0xA9, 0x5E, 0xA1, 0xA5, 0xA1, 0xB1, 0xCF, 0xC3, 0x9B, 0x97,
            0xA1, 0x18, 0xA8, 0xBE, 0x0, 0x47, 0xFB, 0xCA, 0x3F, 0x23, 0x5E, 0xF3, 0x7A,
            0x9B, 0x46, 0xBD, 0x6B, 0xEE, 0xD7, 0x79, 0x91, 0xDF, 0x83, 0x2, 0x41, 0x0,
            0xB9, 0x71, 0x61, 0xA0, 0x56, 0x87, 0xAE, 0x15, 0x77, 0x89, 0xDF, 0x85, 0xDC,
            0x2E, 0xE3, 0xBE, 0x36, 0x26, 0xE9, 0x84, 0xBE, 0xF2, 0x98, 0xDA, 0x3D, 0x42,
            0xC, 0x47, 0x44, 0xFD, 0x93, 0xDF, 0x88, 0xAA, 0xAE, 0xB4, 0x7C, 0xB6, 0x91,
            0x4, 0x83, 0x85, 0xEF, 0xA6, 0xE3, 0xD, 0x9D, 0x7B, 0x35, 0xFE, 0x3A, 0x47,
            0xAF, 0x7C, 0xF9, 0x25, 0xE2, 0xB, 0x74, 0xBA, 0xB8, 0xE2, 0x9E, 0xF9, 0x2,
            0x41, 0x0, 0x8C, 0x52, 0x95, 0x9B, 0xAC, 0x69, 0x3F, 0x11, 0xB2, 0x57, 0xB6,
            0xBA, 0xE1, 0x3F, 0xF3, 0x3A, 0x1D, 0x59, 0x91, 0x1, 0xAF, 0xED, 0x49, 0xAA,
            0x1E, 0xA4, 0x66, 0x63, 0x84, 0x50, 0xA, 0x70, 0xE9, 0xC1, 0x19, 0x16, 0x76,
            0x8A, 0x82, 0x67, 0xBA, 0x6B, 0x65, 0xC5, 0xD4, 0x0, 0x2F, 0xFD, 0x31, 0x7F,
            0x6C, 0xE9, 0xF7, 0xA7, 0x12, 0x2F, 0x28, 0xF2, 0x9F, 0x3A, 0x51, 0xB, 0xEA,
            0x57, 0x2, 0x40, 0x7B, 0xA0, 0xEB, 0xC0, 0x39, 0xAF, 0xC9, 0x63, 0xA5, 0x6,
            0x95, 0x3, 0xE8, 0x1F, 0x42, 0x7E, 0xCE, 0xC4, 0x9B, 0xAD, 0xD4, 0xA1, 0xBB,
            0x3C, 0x28, 0xD6, 0xB2, 0xDA, 0x2D, 0xFE, 0x62, 0x95, 0x5, 0xC7, 0x1F, 0x22,
            0xFD, 0xCF, 0xB, 0x58, 0x57, 0xAE, 0x9F, 0xC4, 0x97, 0x5E, 0x68, 0xFC, 0xCE,
            0xA9, 0x7C, 0x2F, 0xCA, 0x53, 0x50, 0xC3, 0xEC, 0x7, 0xA3, 0x27, 0x25, 0xEC,
            0x69, 0xFB, 0x2, 0x41, 0x0, 0x9C, 0x34, 0xA1, 0xC5, 0xF7, 0xD7, 0x5F, 0x31,
            0x4E, 0xC, 0xEB, 0x6D, 0x5E, 0x3D, 0xD3, 0x7A, 0x5A, 0x2E, 0x7C, 0x89, 0x99,
            0x6B, 0xDF, 0x96, 0xBE, 0x8A, 0x7D, 0x61, 0x26, 0x5A, 0x56, 0x66, 0x4D, 0x30,
            0x27, 0x7E, 0x2A, 0x5B, 0x9C, 0x8F, 0x1C, 0xC6, 0x3C, 0xEE, 0x9C, 0x1E, 0xAA,
            0x90, 0x75, 0xA4, 0xFB, 0x6, 0xEA, 0xCA, 0x47, 0xD9, 0x66, 0x29, 0xB0, 0x7D,
            0xFE, 0x19, 0xDA, 0x2E
            //@formatter:on
        };
        #endif

        byte[] publicKey => new byte[] {
            //@formatter:off
            0x30, 0x81, 0x9D, 0x30, 0xD, 0x6, 0x9, 0x2A, 0x86, 0x48, 0x86, 0xF7,
            0xD, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x81, 0x8B, 0x0, 0x30, 0x81, 0x87,
            0x2, 0x81, 0x81, 0x0, 0x98, 0x78, 0xBE, 0x1F, 0x12, 0x90, 0x25, 0xD5,
            0x7, 0x8C, 0x53, 0xF6, 0x8B, 0x2A, 0x5A, 0x1A, 0xB8, 0xD, 0xF6, 0x9B,
            0xA2, 0x8E, 0x58, 0x85, 0x4C, 0x5E, 0x4A, 0x11, 0x2C, 0x4C, 0xEA, 0xB3,
            0xC, 0x3F, 0x4F, 0x2E, 0x50, 0xDA, 0x22, 0xD3, 0x74, 0x3C, 0xA6, 0x80,
            0x61, 0x7, 0x26, 0x97, 0x1A, 0x63, 0xAA, 0x96, 0x26, 0x5E, 0x8C, 0x9C,
            0xFF, 0xAA, 0x80, 0x6E, 0xE1, 0x83, 0xCA, 0x1A, 0xA9, 0x70, 0x2E, 0x48,
            0xEC, 0xD5, 0x3A, 0x7A, 0xBA, 0xCA, 0xD3, 0xCF, 0xD2, 0xD, 0xB5, 0x31,
            0xA9, 0x63, 0x38, 0x2C, 0x31, 0x37, 0xDC, 0xFA, 0x19, 0x76, 0xF3, 0xC7,
            0x3B, 0xB6, 0x9, 0xBD, 0x92, 0x84, 0xF6, 0xCC, 0x5E, 0x99, 0x4B, 0x21,
            0xC8, 0x92, 0x24, 0xAF, 0x5E, 0x9A, 0x28, 0xD2, 0xBC, 0x3A, 0xBF, 0x5B,
            0xB4, 0xD9, 0x62, 0xD4, 0x42, 0xE3, 0x39, 0x38, 0xC0, 0x7B, 0x40, 0x6B,
            0x2, 0x1, 0x3
            //@formatter:on
        };
    }
}
